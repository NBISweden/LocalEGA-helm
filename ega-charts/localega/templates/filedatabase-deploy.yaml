apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.fullname" . }}-filedatabase
  labels:
    role: filedatabase
    app: {{ template "localega.name" . }}-filedatabase
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.filedatabase.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.filedatabase.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-filedatabase
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-filedatabase
        role: filedatabase
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        allowPrivilegeEscalation: false
      initContainers:
      - name: tls-init
        image: "jombyl/openssl:alpine-3.9"
        command: ["/bin/sh", "-c"]
        args: ["openssl pkcs12 -export -out /tls/filedb.p12 -inkey /tls-certs/filedatabase{{ .Values.config.tls_key_ending }} -in /tls-certs/filedatabase{{ .Values.config.tls_cert_ending }} -passout pass:${PASS}"]
        env:
        - name: PASS
          value: {{ .Values.filedatabase.keystorePass | quote }}
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
      containers:
      - name: filedatabase
        image: "{{ .Values.filedatabase.repository }}:{{ .Values.filedatabase.imageTag }}"
        imagePullPolicy: {{ .Values.filedatabase.imagePullPolicy | quote }}
        command: ["java", "-jar", "ega-data-api-filedatabase-0.0.1-SNAPSHOT.jar"]
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: no-oss
        - name: DB_SCHEMA
          value: "local_ega_ebi"
        - name: DB_USERNAME
          value: {{ .Values.config.postgres_out_user | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-db-secret
              key: pg_out_password
        - name: DB_URL
          value: "jdbc:postgresql://{{ if .Values.config.postgres_host }}{{ .Values.config.postgres_host }}{{ else }}{{ template "localega.name" . }}-db{{ end }}:{{ .Values.config.postgres_port }}/{{ .Values.config.postgres_db_name }}?sslmode={{ .Values.config.postgres_sslmode }}&sslrootcert=/etc/ssl/certs/java/{{ .Values.config.tls_ca_root_file }}&connectTimeout=0&loggerLevel=DEBUG"
        - name: KEY_STORE
          value: "/ega/tls/filedb.p12"
        - name: KEY_STORE_PASSWORD
          value: {{ .Values.filedatabase.keystorePass | quote }}
        ports:
        - name: filedatabase
          containerPort: {{ .Values.filedatabase.port }}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: filedatabase
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: filedatabase
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
{{ toYaml .Values.filedatabase.resources | trim | indent 10 }}
        volumeMounts:
        - name: tls
          mountPath: "/ega/tls"
        - name: ca-cert
          mountPath: "/etc/ssl/certs/java"
      volumes:
        - name: tls
          emptyDir:
            medium: Memory
            sizeLimit: 100Mi
        - name: tls-certs
          secret:
            secretName: {{ template "localega.name" . }}-filedb-certs
        - name: ca-cert
          projected:
            defaultMode: 0440
            sources:
            - secret:
                name: {{ template "localega.name" . }}-filedb-certs
                items:
                  - key: {{ .Values.config.tls_ca_root_file }}
                    path: {{ .Values.config.tls_ca_root_file }}
                  - key: cacerts
                    path: cacerts
