{{ if eq "egarchive/lega-inbox" .Values.inbox.repository }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.fullname" . }}-inbox
  labels:
    role: inbox
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.inbox.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  serviceName: inbox
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-inbox
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-inbox
        role: inbox
        release: {{ .Release.Name }}
        type: ssh-inbox
    spec:
{{ if or .Values.ingest.coLocateInbox (not .Values.persistence.enabled) }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - ingest
{{ end }}
      containers:
      - name: inbox
        image: "{{ .Values.inbox.repository }}:{{ .Values.inbox.imageTag }}"
        imagePullPolicy: {{ .Values.inbox.imagePullPolicy | quote }}
        env:
        - name: DEFAULT_LOG
          value: {{ .Values.config.log | quote }}
        - name: CEGA_ENDPOINT
        {{ if .Values.config.cega_users_host }}
          value: {{ printf "%s%s" .Values.config.cega_users_host "/lega/v1/legas/users" | quote }}
        {{ else }}
          value: {{ required "A valid .Values.config.cega_users_host URL are required" .Values.config.cega_users_host }}
        {{ end }}
        - name: CEGA_ENDPOINT_JSON_PREFIX
          value: "response.result"
        - name: CEGA_ENDPOINT_CREDS
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-cega-users-creds
              key: credentials
        - name: MQ_CONNECTION
        {{ if .Values.config.broker_enable_ssl }}
          value: "{{ printf "amqps://%s:%s@" .Values.config.broker_username .Values.secrets.mq_password }}{{ template "localega.fullname" . }}-mq:{{ .Values.config.broker_port}}"
        {{ else }}
          value: "{{ printf "amqp://%s:%s@" .Values.config.broker_username .Values.secrets.mq_password }}{{ template "localega.fullname" . }}-mq:{{ .Values.config.broker_port}}"
        {{ end }}
        ports:
        - name: inbox
          containerPort: 9000
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: inbox
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts:
        - name: lega-inbox
          mountPath: "/ega/inbox"
        resources:
{{ toYaml .Values.inbox.resources | indent 10 }}
      volumes:
      - name: lega-inbox
      {{- if and .Values.persistence.enabled (not .Values.ingest.coLocateInbox) }}
        {{ if (eq "flexVolume" .Values.inbox.persistence.storageClass) }}
        flexVolume:
          driver: {{ .Values.inbox.persistence.flexVolume.driver | quote }}
          fsType: {{ .Values.inbox.persistence.flexVolume.fsType | quote }}
          options:
            fsName: {{ .Values.inbox.persistence.flexVolume.fsName | quote }}
            clusterNamespace:  {{ .Values.inbox.persistence.flexVolume.clusterNamespace | quote }}
        {{ else if (eq "nfs" .Values.inbox.persistence.storageClass) }}
        source:
          nfs:
            server: {{ if .Values.inbox.persistence.nfs.server }}{{ .Values.inbox.persistence.nfs.server | quote }}{{ end }}
            path: {{ if .Values.inbox.persistence.nfs.path }}{{ .Values.inbox.persistence.nfs.path | quote }}{{- else }}{{ "/" }}{{- end }}
            readOnly: false
        {{ end }}
        {{ if .Values.inbox.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.inbox.existingClaim }}
        {{ end }}
      {{ else }}
        hostPath:
          path: {{ .Values.inbox.location | quote }}
          type: DirectoryOrCreate
      {{ end }}
{{ end }}