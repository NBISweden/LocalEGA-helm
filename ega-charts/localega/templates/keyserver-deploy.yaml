{{ if .Values.keys.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.fullname" . }}-keys
  labels:
    role: keyserver
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.keys.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-keys
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-keys
        role: keyserver
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: tls-init
        image: "jombyl/openssl:alpine-3.9"
        command: ["/bin/sh", "-c"]
        args: ["openssl pkcs12 -export -out /tls/keys.p12 -inkey /tls-certs/keys{{ .Values.config.tls_key_ending }} -in /tls-certs/keys{{ .Values.config.tls_cert_ending }} -passout pass:${PASS}"]
        env:
        - name: PASS
          value: {{ .Values.keys.keystorePass }}
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
      containers:
      - name: keyserver
        image: "{{ .Values.keys.repository }}:{{ .Values.keys.imageTag }}"
        imagePullPolicy: {{ .Values.keys.imagePullPolicy | quote }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: no-oss
        - name: EGA_KEY_PATH
          value: /etc/ega/pgp/key.1.sec
        - name: EGA_KEYPASS_PATH
          value: /etc/ega/pgp/key.1.pass
        - name: EGA_SHAREDPASS_PATH
          value: /etc/ega/pgp/shared.pass
        - name: EGA_PUBLICKEY_URL
          value: /etc/ega/ssl/ega_ssl.key
        - name: EGA_LEGACY_PATH
          value:
        - name: DB_USERNAME
          value: {{ .Values.config.postgres_in_user | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-db-secret
              key: pg_in_password
        - name: FILEDATABASE_SERVERS
          value: "{{ template "localega.name" . }}-filedatabase:{{ .Values.filedatabase.servicePort }}"
        - name: KEY_STORE
          value: "/ega/tls/keys.p12"
        - name: KEY_STORE_PASSWORD
          value: {{ .Values.keys.keystorePass | quote }}
        ports:
        - name: key-app-port
          containerPort: {{ .Values.keys.port }}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: key-app-port
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: key-app-port
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
{{ toYaml .Values.keys.resources | trim | indent 10 }}
        volumeMounts:
        - name: keyserver-pgpkeys
          mountPath: /etc/ega/pgp
        - name: tls
          mountPath: "/ega/tls"
        - name: ca-cert
          mountPath: "/usr/local/share/ca-certificates"
      volumes:
        - name: keyserver-pgpkeys
          projected:
            sources:
            - secret:
                name: {{ template "localega.name" . }}-keyserver-secret
                items:
                - key: key.1.sec
                  path: key.1.sec
            - secret:
                name: {{ template "localega.name" . }}-shared-password
                items:
                - key: shared.pass
                  path: shared.pass
            - secret:
                name: {{ template "localega.name" . }}-pgp-passphrase
                items:
                - key: pgp.pass
                  path: key.1.pass
        - name: tls
          emptyDir:
            medium: Memory
            sizeLimit: 100Mi
        - name: tls-certs
          secret:
            secretName: {{ template "localega.name" . }}-keys-certs
        - name: ca-cert
          projected:
              sources:
              - secret:
                  name: {{ template "localega.name" . }}-keys-certs
                  items:
                    - key: {{ .Values.config.tls_ca_root_file }}
                      path: {{ .Values.config.tls_ca_root_file }}
{{ end }}