{{- if .Values.doa.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.fullname" . }}-doa
  labels:
    role: doa
    app: {{ template "localega.name" . }}-doa
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.doa.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.doa.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-doa
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-doa
        role: doa
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.rbacEnabled}}
      serviceAccountName: {{ .Release.Name }}
    {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: doa
        image: "{{ .Values.doa.repository }}:{{ .Values.doa.imageTag }}"
        imagePullPolicy: {{ .Values.doa.imagePullPolicy | quote }}
        command: ["java", "-jar", "localega-doa.jar"]
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: no-oss,LocalEGA
        - name: DB_INSTANCE
          value: "{{- if .Values.config.postgres_host }}{{ .Values.config.postgres_host }}{{- else }}{{ template "localega.name" . }}-db{{- end }}"
        - name: POSTGRES_DB
          value: {{ .Values.config.postgres_db_name | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.config.postgres_out_user | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-db-secret
                key: pg_out_password
        - name: S3_ENDPOINT
          value: {{ required "A valid .Values.config.data_storage_url entry required!" .Values.config.data_storage_url | quote }}
        - name: S3_ACCESS_KEY
          valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-s3-keys
                key: s3_access_key
        - name: S3_SECRET_KEY
          valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-s3-keys
                key: s3_secret_key
        - name: S3_REGION
          value:
        - name: JWT_PUBLIC_KEY_PATH
          value: "/etc/ega/jwttoken/token.pub"
        - name: CRYPT4GH_PRIVATE_KEY_PATH
          value: {{ .Values.config.crypt4gh_private_key_path | quote }}
        - name: KEYSTORE_PATH
          value: "/ega/tls/doa.p12"
        - name: CERT_PASSWORD
          value: {{ .Values.doa.keystorePass | quote }}
        - name: ROOT_CERT_PATH
          value: "/ega/tls/root.ca.crt"
        - name: CERT_PATH
          value: "/ega/tls/doa.ca.crt"
        - name: CERT_KEY
          value: "/ega/tls/doa.ca.key"
        - name: CRYPT4GH_PRIVATE_KEY_PATH
          value: "/etc/ega/c4gh/key.1.c4gh.sec"
        - name: CRYPT4GH_PRIVATE_KEY_PASSWORD_PATH
          value: "/etc/ega/crypt4gh/key.pass"
        ports:
        - name: doa
          containerPort: {{ .Values.doa.port }}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: doa
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: doa
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
{{ toYaml .Values.doa.resources | trim | indent 10 }}
        volumeMounts:
        - name: tls-certs
          mountPath: "/ega/tls"
        - name: ca-cert
          mountPath: "/etc/ssl/certs/java"
        - name: jwt-token
          mountPath: "/etc/ega/jwttoken/"
        - name: c4gh-key
          mountPath: "/etc/ega/c4gh/"
      volumes:
        - name: jwt-token
          configMap:
            name: {{ template "localega.name" . }}-doa-public-jwt-key
        - name: c4gh-key
          secret:
            secretName: {{ template "localega.name" . }}-doa-secret
            defaultMode: 0440
        - name: tls-certs
          secret:
            secretName: {{ template "localega.name" . }}-doa-certs
            defaultMode: 0440
        - name: ca-cert
          projected:
            defaultMode: 0440
            sources:
            - secret:
                name: {{ template "localega.name" . }}-doa-certs
                items:
                  - key: cacerts
                    path: cacerts
{{- end }}

