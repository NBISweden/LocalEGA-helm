apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.ingest.fullname" . }}
  labels:
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.ingest.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: ingest
spec:
  replicas: {{ .Values.ingest.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ include "localega.name" . }}-ingest
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "localega.name" . }}-ingest
        role: ingest
        release: {{ .Release.Name }}
      annotations:
        checksum/conf: {{ include (print $.Template.BasePath "/ingest-conf.yaml") . | sha256sum }}
    spec:
{{- if or .Values.ingest.coLocateInbox (not .Values.persistence.enabled) }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: role
                operator: In
                values:
                - inbox
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      containers:
      - name: ingest
        image: "{{ .Values.ingest.repository }}:{{ .Values.ingest.imageTag }}"
        imagePullPolicy: {{ .Values.ingest.imagePullPolicy | quote }}
        command: ["ega-ingest"]
        args: ["--log", {{ .Values.config.log | quote }}]
        resources:
{{ toYaml .Values.ingest.resources | trim | indent 10 }}
        env:
        - name: DEFAULT_LOG
          value: {{ .Values.config.log | quote }}
        - name: LEGA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-shared-password
              key: shared.pass
        - name: ARCHIVE_STORAGE_DRIVER
          value: {{ .Values.config.data_storage_type | quote }}
{{- if eq "S3Storage" .Values.config.data_storage_type }}
        - name: ARCHIVE_S3_BUCKET
          value: {{ .Values.config.data_storage_s3_bucket | quote }}
        - name: ARCHIVE_S3_REGION
          value: {{ .Values.config.data_storage_s3_region | quote }}
        - name: ARCHIVE_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-s3-keys
              key: s3_access_key
        - name: ARCHIVE_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-s3-keys
              key: s3_secret_key
        - name: ARCHIVE_S3_CHUNK_SIZE
          value: {{  .Values.config.data_storage_s3_chunk_size | mul 1048576 | quote }}
        - name: ARCHIVE_S3_URL
          value: {{ required "A valid .Values.config.data_storage_url entry required!" .Values.config.data_storage_url | quote }}
{{- else if eq "FileStorage" .Values.config.data_storage_type }}
        - name: ARCHIVE_LOCATION
          value: {{ .Values.config.data_storage_location | quote }}
        - name: ARCHIVE_MODE
          value: {{ .Values.config.data_storage_mode | quote }}
{{- end }}
        volumeMounts:
        - name: lega-inbox
          mountPath: "/ega/inbox"
        - name: ssl-certs
          mountPath: "/etc/ega/ssl"
        - name: conf
          mountPath: /etc/ega/
      restartPolicy: Always
      volumes:
      - name: ssl-certs
        secret:
          secretName: {{ template "localega.name" . }}-ingest-certs
      - name: conf
        projected:
            sources:
            - configMap:
                name: {{ template "localega.name" . }}-ingest-conf
      - name: lega-inbox
      {{- if and .Values.persistence.enabled (not .Values.ingest.coLocateInbox) }}
        {{ if (eq "flexVolume" .Values.inbox.persistence.storageClass) }}
        flexVolume:
          driver: {{ .Values.inbox.persistence.flexVolume.driver | quote }}
          fsType: {{ .Values.inbox.persistence.flexVolume.fsType | quote }}
          options:
            fsName: {{ .Values.inbox.persistence.flexVolume.fsName | quote }}
            clusterNamespace:  {{ .Values.inbox.persistence.flexVolume.clusterNamespace | quote }}
        {{ else if (eq "nfs" .Values.inbox.persistence.storageClass) }}
        source:
          nfs:
            server: {{ if .Values.inbox.persistence.nfs.server }}{{ .Values.inbox.persistence.nfs.server | quote }}{{ end }}
            path: {{ if .Values.inbox.persistence.nfs.path }}{{ .Values.inbox.persistence.nfs.path | quote }}{{ else }}{{ "/" }}{{ end }}
            readOnly: false
        {{ end }}
        {{ if .Values.inbox.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ if .Values.inbox.existingClaim }}{{ .Values.inbox.existingClaim }}{{ else }}{{ template "localega.inbox.fullname" . }}{{ end }}
        {{ end }}
      {{ else }}
        hostPath:
          path: {{ .Values.inbox.location | quote }}
          type: DirectoryOrCreate
      {{ end }}