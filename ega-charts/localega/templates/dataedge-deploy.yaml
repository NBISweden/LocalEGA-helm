apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.fullname" . }}-dataedge
  labels:
    role: dataedge
    app: {{ template "localega.name" . }}-dataegde
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.dataedge.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.dataedge.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-dataedge
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-dataedge
        role: dataedge
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: tls-init
        image: "jombyl/openssl:alpine-3.9"
        command: ["/bin/sh", "-c"]
        args: ["openssl pkcs12 -export -out /tls/dataedge.p12 -inkey /tls-certs/dataedge{{ .Values.config.tls_key_ending }} -in /tls-certs/dataedge{{ .Values.config.tls_cert_ending }} -passout pass:${PASS}"]
        env:
        - name: PASS
          value: {{ .Values.dataedge.keystorePass |quote }}
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
      containers:
      - name: dataedge
        image: "{{ .Values.dataedge.repository }}:{{ .Values.dataedge.imageTag }}"
        imagePullPolicy: {{ .Values.dataedge.imagePullPolicy | quote }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: no-oss,LocalEGA
        - name: FILEDATABASE_SERVERS
          value: "{{ template "localega.name" . }}-filedatabase:{{ .Values.filedatabase.servicePort }}"
        - name: KEYS_SERVERS
          value: "{{ template "localega.name" . }}-keys:{{ .Values.keys.servicePort }}"
        - name: RES_SERVERS
          value: "{{ template "localega.name" . }}-res:{{ .Values.res.servicePort }}"
        - name: EGA_EGA_EXTERNAL_URL
          value: "https://ega.ebi.ac.uk:8051/elixir/data/files/"
        - name: EGA_EGA_CRAM_FASTA_A
          value: "/homes/ega-prod/ngs_dev/Homo_sapiens_assembly38.fasta"
        - name: EGA_EGA_CRAM_FASTA_B
          value: "/homes/ega-prod/ngs_dev/Homo_sapiens_assembly38.fastb"
        - name: JWTKEY
          valueFrom:
            configMapKeyRef:
              name: {{ template "localega.name" . }}-dataedge-public-key
              key: token.pub
        - name: KEY_STORE
          value: "/ega/tls/dataedge.p12"
        - name: KEY_STORE_PASSWORD
          value: {{ .Values.dataedge.keystorePass |quote }}
        ports:
        - name: dataedge
          containerPort: {{ .Values.dataedge.port }}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: dataedge
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: dataedge
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
{{ toYaml .Values.dataedge.resources | trim | indent 10 }}
        volumeMounts:
        - name: tls
          mountPath: "/ega/tls"
        - name: ca-cert
          mountPath: "/etc/ssl/certs/java"
      volumes:
        - name: tls
          emptyDir:
            medium: Memory
            sizeLimit: 100Mi
        - name: tls-certs
          secret:
            secretName: {{ template "localega.name" . }}-dataedge-certs
        - name: ca-cert
          projected:
            defaultMode: 0440
            sources:
            - secret:
                name: {{ template "localega.name" . }}-dataedge-certs
                items:
                  - key: cacerts
                    path: cacerts